<Project>
	<!--<PropertyGroup Condition="'$(SolutionDir)' == ''">
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../', '*.sln').get_Length()) != 0">../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../', '*.sln').get_Length()) != 0">../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../../', '*.sln').get_Length()) != 0">../../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../../../', '*.sln').get_Length()) != 0">../../../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' == '' and $([System.IO.Directory]::GetFiles('../../../../../', '*.sln').get_Length()) != 0">../../../../../</SolutionDir>
		<SolutionDir Condition="'$(SolutionDir)' != ''">$([System.IO.Path]::GetFullPath('$(SolutionDir)'))</SolutionDir>
	</PropertyGroup>-->

	<PropertyGroup>
		<Company>Out-of-Band Development, LLC</Company>
		<Copyright>$(Company), $([System.DateTime]::Now.ToString('yyyy'))</Copyright>

		<RepositoryUrl>https://github.com/mwwhited/BinaryDataDecoders/</RepositoryUrl>
		<RepositoryType>GitHub</RepositoryType>
		<Authors>Matthew Whited</Authors>

		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<EnableWindowsTargeting>true</EnableWindowsTargeting>
		
		<ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>
	</PropertyGroup>

	<PropertyGroup Condition="Exists('$(SolutionDir)..\LICENSE')">
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
	</PropertyGroup>
	<ItemGroup Condition="Exists('$(SolutionDir)..\LICENSE')">
		<LicenseFile Include="$(SolutionDir)..\LICENSE" />
		<None Include="@(LicenseFile)" Pack="true" PackagePath="\" />
	</ItemGroup>

	<PropertyGroup Condition="'$(LOCAL_NUGET)' != ''">
		<PackageOutputPath>$(LOCAL_NUGET.Trim('\'))\</PackageOutputPath>
	</PropertyGroup>
	<PropertyGroup Condition="'$(LOCAL_NUGET)' == ''">
		<PackageOutputPath>$(SolutionDir)publish\packages</PackageOutputPath>
	</PropertyGroup>
	<PropertyGroup Condition="'$(DOCUMENT_PATH)' != ''">
		<DocumentPath>$(DOCUMENT_PATH.Trim('\'))\</DocumentPath>
	</PropertyGroup>
	<PropertyGroup Condition="'$(DOCUMENT_PATH)' == ''">
		<DocumentPath>$(SolutionDir)docs\</DocumentPath>
	</PropertyGroup>
	<PropertyGroup Condition="'$(CodeDocumentPath)' == ''">
		<CodeDocumentPath>$(DocumentPath)code\</CodeDocumentPath>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="GitVersion.MsBuild" Version="5.12.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<!--
  this is only needed for profiling so dont worry about it for now... but it seems to have an issue with fsharp
    https://github.com/dotnet/fsharp/issues/7363
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  -->

	<ItemGroup>
		<!-- This added additional documentation to your build output -->
		<CodeDocumentation Include="**\*.md" />
		<CodeDocumentation Include="**\*.plantuml" />
		<CodeDocumentation Include="**\*.puml" />
		<CodeDocumentation Remove="bin\**\*.*" />
		<CodeDocumentation Remove="obj\**\*.*" />
		<CodeDocumentation Remove="TestResults\**\*.*" />
		<CodeDocumentation Remove="TestData\**\*.*" />

		<!-- these items will be automatically included as embedded resources in your assembly. -->
		<Examples Include="**\*.txt" />
		<Examples Include="**\*.json" />
		<Examples Include="**\*.html" />
		<Examples Include="**\*.csv" />
		<Examples Include="**\*.sql" />
		<Examples Include="**\*.xml" />
		<Examples Remove="bin\**\*.*" />
		<Examples Remove="obj\**\*.*" />
		<Examples Remove="TestResults\**\*.*" />

		<Content Include="@(CodeDocumentation)" Pack="true" PackagePath="\docs" />
		<EmbeddedResource Include="@(Examples)" Pack="true" PackagePath="\examples"  />
	</ItemGroup>

	<ItemGroup Condition="'$(PackageReadmeFile)'!='' and Exists('$(PackageReadmeFile)')">
		<None Remove="$(PackageReadmeFile)" />
		<None Include="$(PackageReadmeFile)" Pack="true" PackagePath="\"/>
	</ItemGroup>

</Project>
